Trucs faits cette semaine:
- Nouveau dispatch des instructions
- Bugfix
- Début d'implémentation d'un recompilateur dynamique
- Choix du seecond article à critiquer

Trucs à faire dans la semaine à venir:
- Critique du second article (si approuvé)
- Continuer le recompilateur dynamique
- Fixer l'affichage dans dots2

Un mot sur le nouveau dispatch
Le choix de la structute de données pour effectuer le nouveau dispatch s'est arrêté sur une table de 
hachage (std::unordered_map). La raison derrière ce choix en une de performance. En effet, j'ai pu observé
que le delta de temps pendant lequel je demandais à l'émulateur de dormir pour synchroniser l'affichage
avait été diminué de beaucoup. Le pourquoi de la chose est que l'accès à une instruction dans un map est 
en O(log_2(n)) alors que celui que l'accès à une instruction dans le switch était en temps constant. Effectivement,
pour des switchs aussi monstrueux que celui que j'avais, les compilateurs usuels (MSVC, GCC, CLANG) vont générer
des tables de dispatch dont l'accès est en temps constant. Pour se donner un peu plus de lousse dans la boucle
d'émulation, j'ai donc décidé d'utiliser une table de hachage. J'aurais pu choisir un array, mais il aurait
été rempli de façon très parcimonieuse. Sinon, la motivation de se donner un plus gros delta est que je
m'apprête à mettre en place un recompilateur dynamique qui va profiter de ce delta pour faire son travail.
Tout du moins, c'est la première approche envisagée. Il se peut que le travail du recompilateur se fasse
déplacer dans un fil d'exécution plus tard dans son développement.
